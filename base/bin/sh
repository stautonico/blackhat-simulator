require("stdlib")
require("dirent")
require("unistd")
require("stdio")
require("pwd")

def main(argv):
    uid = geteuid()

    entry = getpwuid(uid)

    if entry is None:
        username = "I have no name!"
    else:
        username = entry.pw_name

    while True:
        prompt = getenv("PS1") or f"{username}@<hostname>{'#' if uid == 0 else '$'} "
        result = input(prompt)

        if result == "": continue

        if result == "exit": return 0

        # Split the result
        args = result.split(" ")

        # Built-ins
        if args[0] == "export":
            key, value = args[1].split("=")
            setenv(key, value)
        elif args[0] == "cd":
            if chdir(args[1]) != 0:
                perror("cd")
        else:
            if result[0] == "/":
                # Abs path to executable
                if execve(args[0], args[1:], {}) < 0:
                    perror(f"sh: {args[0]}")
            else:
                path = getenv("PATH") or "/bin"
                pieces = path.split(":")

                found_command = False

                for piece in pieces:
                    entries = readdir(piece)
                    for entry in entries:
                        if entry == args[0]:
                            if execve(f"{piece}/{args[0]}", args[1:], {}) < 0:
                                perror(f"sh: {args[0]}")
                            found_command = True
                            break

                if not found_command:
                    print(f"sh: command not found '{args[0]}'")
